name: Security Scanning
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Security Scanning
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for security scanning

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install TruffleHog
        run: |
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin

      - name: Run TruffleHog Git History Scan
        id: trufflehog-git
        run: |
          trufflehog git file://. --json --no-update | tee trufflehog-git-results.json
          echo "git_scan_complete=true" >> $GITHUB_OUTPUT

      - name: Run TruffleHog Filesystem Scan
        id: trufflehog-fs
        run: |
          trufflehog filesystem . --json --no-update | tee trufflehog-fs-results.json
          echo "fs_scan_complete=true" >> $GITHUB_OUTPUT

      - name: Run Custom Security Scanner
        run: |
          python security_scan.py

      - name: Upload TruffleHog Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: trufflehog-results
          path: |
            trufflehog-git-results.json
            trufflehog-fs-results.json
            security_report.txt

      - name: Check for Security Issues
        run: |
          # Check if any secrets were found
          GIT_ISSUES=$(jq length trufflehog-git-results.json)
          FS_ISSUES=$(jq length trufflehog-fs-results.json)
          
          echo "Git history scan found: $GIT_ISSUES potential issues"
          echo "Filesystem scan found: $FS_ISSUES potential issues"
          
          if [ "$GIT_ISSUES" -gt 0 ] || [ "$FS_ISSUES" -gt 0 ]; then
            echo "ðŸš¨ Security issues detected! Please review the uploaded artifacts."
            exit 1
          else
            echo "âœ… No security issues found!"
          fi

  dependency-scan:
    runs-on: ubuntu-latest
    name: Dependency Security Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Safety (dependency vulnerability scan)
        run: |
          safety check --json --output safety-report.json || true
          cat safety-report.json

      - name: Run Bandit (Python security linter)
        run: |
          bandit -r . -f json -o bandit-report.json || true
          cat bandit-report.json

      - name: Upload Security Reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-security-reports
          path: |
            safety-report.json
            bandit-report.json
