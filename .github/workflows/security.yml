name: Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'

# Explicit permissions for security
permissions:
  contents: read
  actions: read
  security-events: write
  pull-requests: read

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install TruffleHog
        run: |
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
      
      - name: Run TruffleHog Git History Scan (Local Repository)
        run: |
          echo "üîç Running TruffleHog git history scan..."
          if trufflehog git file://. --since-commit=HEAD~10 --only-verified --json > trufflehog-git.json; then
            echo "‚úÖ TruffleHog git scan completed successfully"
          else
            EXIT_CODE=$?
            if [ $EXIT_CODE -eq 183 ]; then
              echo "‚úÖ TruffleHog git scan completed - no verified secrets found"
              # Exit code 183 means verified secrets found, but we want to check the JSON output
              # Create empty file if secrets were found but we want to handle them in the check step
              touch trufflehog-git.json
            else
              echo "‚ùå TruffleHog git scan failed with exit code: $EXIT_CODE"
              echo "This indicates a tool error, not a security finding"
              exit $EXIT_CODE
            fi
          fi
      
      - name: Run TruffleHog Filesystem Scan (Local Checkout)
        run: |
          echo "üîç Running TruffleHog filesystem scan..."
          if trufflehog filesystem . --only-verified --json > trufflehog-fs.json; then
            echo "‚úÖ TruffleHog filesystem scan completed successfully"
          else
            EXIT_CODE=$?
            if [ $EXIT_CODE -eq 183 ]; then
              echo "‚úÖ TruffleHog filesystem scan completed - no verified secrets found"
              touch trufflehog-fs.json
            else
              echo "‚ùå TruffleHog filesystem scan failed with exit code: $EXIT_CODE"
              echo "This indicates a tool error, not a security finding"
              exit $EXIT_CODE
            fi
          fi
          
      - name: Run TruffleHog on PR Changes (if applicable)
        if: github.event_name == 'pull_request'
        run: |
          echo "üîç Running TruffleHog PR-specific scan..."
          # Fetch base branch for comparison
          git fetch origin ${{ github.base_ref }}
          if trufflehog git file://. --since-commit=origin/${{ github.base_ref }} --only-verified --json > trufflehog-pr.json; then
            echo "‚úÖ TruffleHog PR scan completed successfully"
          else
            EXIT_CODE=$?
            if [ $EXIT_CODE -eq 183 ]; then
              echo "‚úÖ TruffleHog PR scan completed - no verified secrets found"
              touch trufflehog-pr.json
            else
              echo "‚ùå TruffleHog PR scan failed with exit code: $EXIT_CODE"
              echo "This indicates a tool error, not a security finding"
              exit $EXIT_CODE
            fi
          fi
      
      - name: Run Custom Security Scanner
        run: |
          echo "üîç Running custom security scanner..."
          if python security_scan.py; then
            echo "‚úÖ Custom security scanner completed successfully"
          else
            EXIT_CODE=$?
            echo "‚ùå Custom security scanner failed with exit code: $EXIT_CODE"
            echo "Checking if this is a security finding or tool error..."
            
            # Check if scanner created output files indicating findings
            if [ -f "security_report.txt" ] || [ -f "security_alert.md" ]; then
              echo "üö® Security findings detected by custom scanner"
              echo "This is a legitimate security issue that should fail the build"
              exit $EXIT_CODE
            else
              echo "‚ùå Custom scanner failed without security findings"
              echo "This appears to be a tool error, not a security issue"
              echo "Check scanner configuration and dependencies"
              exit $EXIT_CODE
            fi
          fi
      
      - name: Upload TruffleHog Results
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-results
          path: |
            trufflehog-*.json
          retention-days: 30
      
      - name: Check for Security Issues
        run: |
          echo "üîç Checking TruffleHog scan results..."
          
          # Check git history scan
          if [ -s trufflehog-git.json ]; then
            echo "üö® Security issues found in git history!"
            echo "Git scan results:"
            cat trufflehog-git.json
            SECURITY_ISSUES=true
          else
            echo "‚úÖ No security issues in git history"
          fi
          
          # Check filesystem scan  
          if [ -s trufflehog-fs.json ]; then
            echo "üö® Security issues found in filesystem!"
            echo "Filesystem scan results:"
            cat trufflehog-fs.json
            SECURITY_ISSUES=true
          else
            echo "‚úÖ No security issues in filesystem"
          fi
          
          # Check PR-specific scan (if it exists)
          if [ -f trufflehog-pr.json ] && [ -s trufflehog-pr.json ]; then
            echo "üö® Security issues found in PR changes!"
            echo "PR scan results:"
            cat trufflehog-pr.json
            SECURITY_ISSUES=true
          elif [ -f trufflehog-pr.json ]; then
            echo "‚úÖ No security issues in PR changes"
          fi
          
          # Exit with error if any security issues found
          if [ "$SECURITY_ISSUES" = "true" ]; then
            echo "‚ùå Security scan failed - issues detected!"
            exit 1
          else
            echo "‚úÖ All security scans passed - no issues found"
          fi

  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run Safety (dependency vulnerability scan)
        run: |
          echo "üîç Running Safety dependency scan..."
          if safety check --json --output safety-report.json; then
            echo "‚úÖ Safety scan completed - no vulnerabilities found"
          else
            EXIT_CODE=$?
            echo "üö® Safety found vulnerabilities or encountered an error (exit code: $EXIT_CODE)"
            if [ -f "safety-report.json" ] && [ -s "safety-report.json" ]; then
              echo "üìÑ Safety report generated - reviewing findings..."
              cat safety-report.json
              echo "‚ùå Dependency vulnerabilities found - failing build for security"
              exit 1
            else
              echo "‚ùå Safety scan failed without generating report - tool error"
              exit $EXIT_CODE
            fi
          fi
      
      - name: Run Bandit (Python security linter)
        run: |
          echo "üîç Running Bandit security linter..."
          if bandit -r . -f json -o bandit-report.json; then
            echo "‚úÖ Bandit scan completed - no security issues found"
          else
            EXIT_CODE=$?
            echo "üö® Bandit found security issues or encountered an error (exit code: $EXIT_CODE)"
            if [ -f "bandit-report.json" ] && [ -s "bandit-report.json" ]; then
              echo "üìÑ Bandit report generated - reviewing findings..."
              echo "‚ùå Security issues found - failing build for security"
              exit 1
            else
              echo "‚ùå Bandit scan failed without generating report - tool error"
              exit $EXIT_CODE
            fi
          fi
      
      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-security-reports
          path: |
            *-report.json
          retention-days: 30
